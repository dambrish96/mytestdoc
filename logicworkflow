If your logs are stored in the LogicAppWorkflowRuntime table specifically, you would query this table directly rather than using AzureDiagnostics. Hereâ€™s how you can construct a basic query to monitor your Logic App using KQL:LogicAppWorkflowRuntime
| project TimeGenerated, Resource, Status, StatusDetails, Input, OutputExplanation of each part of the query:LogicAppWorkflowRuntime: This is the name of the table where your Logic App runtime logs are stored.project TimeGenerated, Resource, Status, StatusDetails, Input, Output: Specifies the fields to include in the output of the query.TimeGenerated: Timestamp when the log entry was generated.Resource: Name of the Logic App.Status: Status of the Logic App execution (e.g., Succeeded, Failed, Running).StatusDetails: Additional details about the status.Input: Input data for the Logic App execution.Output: Output data produced by the Logic App execution.This query retrieves the basic information about your Logic App executions from the LogicAppWorkflowRuntime table. Depending on your specific monitoring requirements, you can add filters, aggregations, or additional fields to this query.Example of Adding Filters:If you want to filter the results to a specific Logic App or a specific status, you can add where clauses. For example:LogicAppWorkflowRuntime
| where Resource == "YourLogicAppName"
| where Status == "Failed"
| project TimeGenerated, Resource, Status, StatusDetails, Input, OutputReplace "YourLogicAppName" with the name of your Logic App to filter logs for that specific Logic App. Similarly, you can adjust the Status filter to "Succeeded", "Running", or any other status you are interested in monitoring.Example of Time Range Filter:To filter logs within a specific time range, you can use the where clause with TimeGenerated. For example, to filter logs for the last hour:LogicAppWorkflowRuntime
| where TimeGenerated >= ago(1h)
| project TimeGenerated, Resource, Status, StatusDetails, Input, OutputThis query retrieves logs where TimeGenerated is within the last hour (ago(1h)).Adjust and customize these queries based on your specific monitoring needs and the structure of your Logic App runtime logs stored in the LogicAppWorkflowRuntime table.